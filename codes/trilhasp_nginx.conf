# the upstream component nginx needs to connect to
upstream django {
    server unix:///tmp/trilhasp.sock; # socket created by uwsgi
}
# Redirects requests to api.trilhasp.datapublika.com.br to .com domain
server {
    listen    80;
    server_name api.trilhasp.datapublika.com.br www.api.trilhasp.datapublika.com.br;
    return    301 http://api.trilhasp.datapublika.com$request_uri;
}
# Redirects requests to www.api.trilhasp.datapublika.com to non-(www)
server {
    listen    80;
    server_name www.api.trilhasp.datapublika.com;
    return    301 http://api.trilhasp.datapublika.com$request_uri;
}
# configuration of the server
server {
    listen      80;     # the port your site will be served on
    # the domain name it will serve for
    server_name api.trilhasp.datapublika.com;
    charset     utf-8;
    #Enable gzip compression on served files
    gzip_static on;
    location = /robots.txt { 
      deny all; #Disallow search engine crawlers
      log_not_found off;
      access_log off;
    }
    # max upload size
    client_max_body_size 75M;   # adjust to taste
    # Django media folder
    location /media  {
        alias /home/trilhasp/trilhasp/trilhasp/media;
    }
    location /static {  # Django static folder
        alias /home/trilhasp/trilhasp/trilhasp/static;
    }
    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django;
        include     /home/trilhasp/trilhasp/uwsgi_params;
    }
}
